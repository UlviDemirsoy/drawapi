// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using drawapi.Data;

#nullable disable

namespace drawapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("drawapi.Data.Models.Draw", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DrawDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DrawerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("drawapi.Data.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DrawId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DrawId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("drawapi.Data.Models.GroupTeam", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("GroupId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("GroupTeams");
                });

            modelBuilder.Entity("drawapi.Data.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("Name", "Country")
                        .IsUnique();

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("drawapi.Data.Models.Group", b =>
                {
                    b.HasOne("drawapi.Data.Models.Draw", "Draw")
                        .WithMany("Groups")
                        .HasForeignKey("DrawId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Draw");
                });

            modelBuilder.Entity("drawapi.Data.Models.GroupTeam", b =>
                {
                    b.HasOne("drawapi.Data.Models.Group", "Group")
                        .WithMany("GroupTeams")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("drawapi.Data.Models.Team", "Team")
                        .WithMany("GroupTeams")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("drawapi.Data.Models.Team", b =>
                {
                    b.HasOne("drawapi.Data.Models.Group", null)
                        .WithMany("Teams")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("drawapi.Data.Models.Draw", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("drawapi.Data.Models.Group", b =>
                {
                    b.Navigation("GroupTeams");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("drawapi.Data.Models.Team", b =>
                {
                    b.Navigation("GroupTeams");
                });
#pragma warning restore 612, 618
        }
    }
}
